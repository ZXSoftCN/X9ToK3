//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace K3ToX9SqlCRL.X9WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BaseDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback debugOperationCompleted;
        
        private System.Threading.SendOrPostCallback EntryHandleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchBillFromK3ToX9OperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSuccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestFailureOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::K3ToX9SqlCRL.Properties.Settings.Default.K3ToX9SqlCRL_X9WebService_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BaseDirectoryCompletedEventHandler BaseDirectoryCompleted;
        
        /// <remarks/>
        public event debugCompletedEventHandler debugCompleted;
        
        /// <remarks/>
        public event EntryHandleCompletedEventHandler EntryHandleCompleted;
        
        /// <remarks/>
        public event SynchBillFromK3ToX9CompletedEventHandler SynchBillFromK3ToX9Completed;
        
        /// <remarks/>
        public event TestSuccessCompletedEventHandler TestSuccessCompleted;
        
        /// <remarks/>
        public event TestFailureCompletedEventHandler TestFailureCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BaseDirectory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BaseDirectory() {
            object[] results = this.Invoke("BaseDirectory", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BaseDirectoryAsync() {
            this.BaseDirectoryAsync(null);
        }
        
        /// <remarks/>
        public void BaseDirectoryAsync(object userState) {
            if ((this.BaseDirectoryOperationCompleted == null)) {
                this.BaseDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBaseDirectoryOperationCompleted);
            }
            this.InvokeAsync("BaseDirectory", new object[0], this.BaseDirectoryOperationCompleted, userState);
        }
        
        private void OnBaseDirectoryOperationCompleted(object arg) {
            if ((this.BaseDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BaseDirectoryCompleted(this, new BaseDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/debug", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string debug() {
            object[] results = this.Invoke("debug", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void debugAsync() {
            this.debugAsync(null);
        }
        
        /// <remarks/>
        public void debugAsync(object userState) {
            if ((this.debugOperationCompleted == null)) {
                this.debugOperationCompleted = new System.Threading.SendOrPostCallback(this.OndebugOperationCompleted);
            }
            this.InvokeAsync("debug", new object[0], this.debugOperationCompleted, userState);
        }
        
        private void OndebugOperationCompleted(object arg) {
            if ((this.debugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.debugCompleted(this, new debugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EntryHandle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EntryHandle(string _info) {
            object[] results = this.Invoke("EntryHandle", new object[] {
                        _info});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EntryHandleAsync(string _info) {
            this.EntryHandleAsync(_info, null);
        }
        
        /// <remarks/>
        public void EntryHandleAsync(string _info, object userState) {
            if ((this.EntryHandleOperationCompleted == null)) {
                this.EntryHandleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEntryHandleOperationCompleted);
            }
            this.InvokeAsync("EntryHandle", new object[] {
                        _info}, this.EntryHandleOperationCompleted, userState);
        }
        
        private void OnEntryHandleOperationCompleted(object arg) {
            if ((this.EntryHandleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EntryHandleCompleted(this, new EntryHandleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SynchBillFromK3ToX9", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SynchBillFromK3ToX9(string xmlParaText) {
            object[] results = this.Invoke("SynchBillFromK3ToX9", new object[] {
                        xmlParaText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SynchBillFromK3ToX9Async(string xmlParaText) {
            this.SynchBillFromK3ToX9Async(xmlParaText, null);
        }
        
        /// <remarks/>
        public void SynchBillFromK3ToX9Async(string xmlParaText, object userState) {
            if ((this.SynchBillFromK3ToX9OperationCompleted == null)) {
                this.SynchBillFromK3ToX9OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchBillFromK3ToX9OperationCompleted);
            }
            this.InvokeAsync("SynchBillFromK3ToX9", new object[] {
                        xmlParaText}, this.SynchBillFromK3ToX9OperationCompleted, userState);
        }
        
        private void OnSynchBillFromK3ToX9OperationCompleted(object arg) {
            if ((this.SynchBillFromK3ToX9Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchBillFromK3ToX9Completed(this, new SynchBillFromK3ToX9CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestSuccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestSuccess(string _itemInfo) {
            object[] results = this.Invoke("TestSuccess", new object[] {
                        _itemInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestSuccessAsync(string _itemInfo) {
            this.TestSuccessAsync(_itemInfo, null);
        }
        
        /// <remarks/>
        public void TestSuccessAsync(string _itemInfo, object userState) {
            if ((this.TestSuccessOperationCompleted == null)) {
                this.TestSuccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSuccessOperationCompleted);
            }
            this.InvokeAsync("TestSuccess", new object[] {
                        _itemInfo}, this.TestSuccessOperationCompleted, userState);
        }
        
        private void OnTestSuccessOperationCompleted(object arg) {
            if ((this.TestSuccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSuccessCompleted(this, new TestSuccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestFailure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestFailure(string _itemInfo) {
            object[] results = this.Invoke("TestFailure", new object[] {
                        _itemInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestFailureAsync(string _itemInfo) {
            this.TestFailureAsync(_itemInfo, null);
        }
        
        /// <remarks/>
        public void TestFailureAsync(string _itemInfo, object userState) {
            if ((this.TestFailureOperationCompleted == null)) {
                this.TestFailureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestFailureOperationCompleted);
            }
            this.InvokeAsync("TestFailure", new object[] {
                        _itemInfo}, this.TestFailureOperationCompleted, userState);
        }
        
        private void OnTestFailureOperationCompleted(object arg) {
            if ((this.TestFailureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestFailureCompleted(this, new TestFailureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void BaseDirectoryCompletedEventHandler(object sender, BaseDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BaseDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BaseDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void debugCompletedEventHandler(object sender, debugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class debugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal debugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void EntryHandleCompletedEventHandler(object sender, EntryHandleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EntryHandleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EntryHandleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void SynchBillFromK3ToX9CompletedEventHandler(object sender, SynchBillFromK3ToX9CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SynchBillFromK3ToX9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SynchBillFromK3ToX9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void TestSuccessCompletedEventHandler(object sender, TestSuccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSuccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSuccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void TestFailureCompletedEventHandler(object sender, TestFailureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestFailureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestFailureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591